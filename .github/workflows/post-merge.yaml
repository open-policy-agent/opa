name: Post Merge

on:
  push:
    branches:
      - master

jobs:
  generate:
    name: Sync Generated Code
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Generate
        run: make clean generate

      - name: Commit & Push
        shell: bash
        run: |
          # See https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
          git config user.name github-actions
          git config user.email github-actions@github.com

          if ./build/commit-wasm-bins.sh; then
            git push
          else
            echo "No generated changes to push!"
          fi

  code-coverage:
    name: Update Go Test Coverage
    runs-on: ubuntu-18.04
    needs: generate
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Unit Test Golang
        run: make ci-go-test-coverage
        timeout-minutes: 30

      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ./coverage.txt
          fail_ci_if_error: false

  deploy-edge:
    name: Push Edge Release
    runs-on: ubuntu-18.04
    needs: generate
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Test
        run: make ci-release-test
        timeout-minutes: 60

      - name: Build Release Binaries
        env:
          TELEMETRY_URL: ${{ secrets.TELEMETRY_URL }}
        run: make release-local

      - name: Deploy OPA Edge
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
          S3_RELEASE_BUCKET: ${{ secrets.S3_RELEASE_BUCKET }}
        # Only run if required secrets are provided
        if: ${{ env.S3_RELEASE_BUCKET && env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.DOCKER_USER && env.DOCKER_PASSWORD }}
        run: make deploy-ci

  deploy-wasm-builder:
    name: Deploy WASM Builder
    runs-on: ubuntu-18.04
    needs: generate
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build and Push opa-wasm-builder
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_WASM_BUILDER_IMAGE: ${{ secrets.DOCKER_WASM_BUILDER_IMAGE }}
        # Only run if required secrets are provided
        if: ${{ env.DOCKER_USER && env.DOCKER_PASSWORD }}
        run: make push-wasm-builder-image
