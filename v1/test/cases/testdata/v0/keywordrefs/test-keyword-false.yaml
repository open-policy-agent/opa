---
cases:
  - note: keywordrefs/false keyword in package
    query: data.foo.p = x
    modules:
      - |
        package foo.false.bar

        baz := 42
      - |
        package foo
        import data.foo.false.bar

        p {
          bar.baz == 42
          data.foo.false.bar.baz == 42
        }
    want_result:
      - x: true
  - note: keywordrefs/false keyword in package, import alias
    query: data.foo.p = x
    modules:
      - |
        package foo.false

        bar := 42
      - |
        package foo
        import data.foo.false as my_if

        p {
          my_if.bar == 42
          data.foo.false.bar == 42
        }
    want_result:
      - x: true
  - note: keywordrefs/false keyword rule refhead
    query: data.test.p = x
    modules:
      - |
        package test

        p {
          false.foo == 1
          foo.false == 2
        }

        false.foo := 1

        foo.false := 2
    want_result:
      - x: true
  - note: keywordrefs/false keyword rule refhead, else bodies
    query: data.test.p = x
    input:
      x: 3
    modules:
      - |
        package test

        p {
          false.foo.bar == 3
          foo.bar.false == 6
        }

        false.foo.bar := 1 {
          input.x == 1
        } else := 2 {
          input.x == 2
        } else := 3

        foo.bar.false := 4 {
          input.x == 1
        } else := 5 {
          input.x == 2
        } else := 6
    want_result:
      - x: true
  - note: keywordrefs/false keyword rule refhead, partial set
    query: data.test.p = x
    modules:
      - |
        package test
        import future.keywords.contains

        p {
          false.foo.bar == {"a", "c"}
          foo.bar.false == {"a", "c"}
        }

        false.foo.bar contains "a"

        false.foo.bar contains "b" {
          false
        }

        false.foo.bar contains "c" {
          true
        }

        foo.bar.false contains "a"

        foo.bar.false contains "b" {
          false
        }

        foo.bar.false contains "c" {
          true
        }
    want_result:
      - x: true
  - note: keywordrefs/false keyword rule refhead, partial object
    query: data.test.p = x
    modules:
      - |
        package test

        p {
          false.foo == "a"
          false.bar.one == "a"
          false.bar.three == "c"
          foo.false == "a"
          bar.baz.false == "a"
        }

        false.foo := "a"

        false.foo := "b" {
          false
        }

        false.foo := "c" {
          false
        }

        false.bar.one := "a"

        false.bar.two := "b" {
          false
        }

        false.bar.three := "c" {
          true
        }

        foo.false := "a"

        foo.false := "b" {
          false
        }

        foo.false := "c" {
          false
        }

        bar.baz.false := "a"

        bar.baz.false := "b" {
          false
        }

        bar.baz.false := "c" {
          false
        }
    want_result:
      - x: true
  - note: keywordrefs/false keyword function refhead
    query: data.test.p = x
    modules:
      - |
        package test

        p {
          false.foo(1) == 1
          false.foo(11) == 42
          foo.false(1) == 1
          foo.false(11) == 42
          bar.false.baz(1) == 1
          bar.false.baz(11) == 42
        }

        default false.foo(_) := 42

        false.foo(x) := x {
          x < 10
        }

        default foo.false(_) := 42

        foo.false(x) := x {
          x < 10
        }

        default bar.false.baz(_) := 42

        bar.false.baz(x) := x {
          x < 10
        }
    want_result:
      - x: true
