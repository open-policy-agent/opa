go test fuzz v1
string("package ex\n\n\t\t\tno_op { true } else = false { true }\n\t\t\tbool { false } else { true }\n\t\t\tnon_bool = null { false } else = [100] { true }\n\t\t\ttriple { false } else { false } else = \"hello\" { true }\n\t\t\tvars { false } else = [\"hello\", x] { data.b.v2 = x }\n\t\t\trefs { false } else = [\"hello\", data.b.v2] { true }\n\t\t\tmultiple_defined = false { false } else = true { true } else = false { true }\n\n\t\t\tdefault default_1 = 1\n\t\t\tdefault_1 { false } default_1 = 2 { true }\n\n\t\t\tdefault default_2 = 2\n\t\t\tdefault_2 { false } default_2 = 1 { false }\n\n\t\t\tmultiple_roots {\n\t\t\t\tfalse\n\t\t\t} else = 1 {\n\t\t\t\tfalse\n\t\t\t} else = 2 {\n\t\t\t\ttrue\n\t\t\t} else = 3 {\n\t\t\t\ttrue\n\t\t\t}\n\n\t\t\tmultiple_roots = 2\n\n\t\t\tmultiple_roots = 3 {\n\t\t\t\tfalse\n\t\t\t} else = 2 {\n\t\t\t\ttrue\n\t\t\t}\n\n\t\t\tindexed {\n\t\t\t\tdata.a[0] = 0\n\t\t\t} else = 2 {\n\t\t\t\tdata.a[0] = 1\n\t\t\t} else = 3 {\n\t\t\t\tdata.a[0] = 1\n\t\t\t}\n\n\t\t\tindexed {\n\t\t\t\tdata.a[0] = 1\n\t\t\t\tdata.a[2] = 2\n\t\t\t} else {\n\t\t\t\tfalse\n\t\t\t} else = 2 {\n\t\t\t\tdata.a[0] = x\n\t\t\t\tx = 1\n\t\t\t\tdata.a[2] = 3\n\t\t\t}\n\n\t\t\tconflict_1 { false } else { true }\n\t\t\tconflict_1 = false { true }\n\n\t\t\tconflict_2 { false } else = false { true }\n\t\t\tconflict_2 { false } else = true { true }\n\n\t\t\tfn_result = [x,y,z] { fn(101, true, x); fn(100, true, y); fn(100, false, z) }\n\n\t\t\tfn(x, y) = \"large\" {\n\t\t\t\tx > 100\n\t\t\t} else = \"small\" {\n\t\t\t\ty = true\n\t\t\t} else = \"medium\" {\n\t\t\t\ttrue\n\t\t\t}\n\t\t\t")
