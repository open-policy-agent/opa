/*
Copyright The ORAS Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package graph

import (
	"context"
	"errors"

	ocispec "github.com/opencontainers/image-spec/specs-go/v1"
)

var (
	// ErrStopHandler signals the handler chain generated by Handlers() to stop
	// processing the rest handlers. The successor nodes returned by the
	// previous handlers are still returned.
	ErrStopHandler = errors.New("stop handler")

	// ErrSkipDesc signals the handler chain generated by Handlers() to stop
	// processing the rest handlers. The successor nodes returned by the
	// previous handlers are ignored.
	// This error also applies to single handlers.
	ErrSkipDesc = errors.New("skip descriptor")
)

// Handler processes contents. This interface is equivalent to
// github.com/containerd/containerd/images.Handler.
type Handler interface {
	// Handle handles the content described by the descriptor.
	Handle(ctx context.Context, desc ocispec.Descriptor) ([]ocispec.Descriptor, error)
}

// HandlerFunc function implementing the Handler interface.
// This function is equivalent to
// github.com/containerd/containerd/images.HandlerFunc.
type HandlerFunc func(ctx context.Context, desc ocispec.Descriptor) ([]ocispec.Descriptor, error)

// Handle handles the content described by the descriptor.
func (fn HandlerFunc) Handle(ctx context.Context, desc ocispec.Descriptor) ([]ocispec.Descriptor, error) {
	return fn(ctx, desc)
}

// Handlers returns a handler that will run the handlers in sequence.
// This function is equivalent to
// github.com/containerd/containerd/images.Handlers.
//
// A handler may return `ErrStopHandler` to stop calling additional handlers.
// Note: Handlers with `github.com/containerd/containerd/images.ErrStopHandler`
// cannot be used in this function.
func Handlers(handlers ...Handler) HandlerFunc {
	return func(ctx context.Context, desc ocispec.Descriptor) ([]ocispec.Descriptor, error) {
		var successors []ocispec.Descriptor
		for _, handler := range handlers {
			nodes, err := handler.Handle(ctx, desc)
			if err != nil {
				if errors.Is(err, ErrStopHandler) {
					break
				}
				return nil, err
			}
			successors = append(successors, nodes...)
		}
		return successors, nil
	}
}
