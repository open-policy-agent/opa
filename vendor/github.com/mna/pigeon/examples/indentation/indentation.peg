{
package main

func toIfaceSlice(v interface{}) []interface{} {
    if v == nil {
        return nil
    }
    return v.([]interface{})
}

}

Input       ← #{ c.state["Indentation"] = 0; return nil } s:Statements  r:ReturnOp EOF 
                                            { return newProgramNode(s.(StatementsNode),r.(ReturnNode)) }
Statements  ← s:Line+                       { return newStatementsNode(s)}
Line        ← INDENTATION s:Statement       { return s,nil }
ReturnOp    ← "return" _ arg:Identifier EOL { return newReturnNode(arg.(IdentifierNode))}

Statement   ← s:Assignment EOL              { return s.(AssignmentNode),nil }
    / "if" _ arg:LogicalExpression _? ":" EOL INDENT s:Statements DEDENT 
                                            { return newIfNode(arg.(LogicalExpressionNode),s.(StatementsNode)) }
  
  
Assignment ← lvalue:Identifier _? "=" _? rvalue:AdditiveExpression
                                            { return newAssignmentNode(lvalue.(IdentifierNode),rvalue.(AdditiveExpressionNode)) }

LogicalExpression   ← arg:PrimaryExpression { return newLogicalExpressionNode(arg.(PrimaryExpressionNode)) }
AdditiveExpression  ← arg:PrimaryExpression rest:( _ AddOp _ PrimaryExpression )* 
                                            { return newAdditiveExpressionNode(arg.(PrimaryExpressionNode),rest)}
PrimaryExpression   ← arg:(Integer / Identifier) 
                                            { return newPrimaryExpressionNode(arg) }

Integer ← [0-9]+                            { return newIntegerNode(string(c.text)) }
Identifier ← [a-zA-Z] [a-zA-Z0-9]*          { return newIdentifierNode(string(c.text)) }

AddOp ← ( '+' / '-' )                       { return string(c.text),nil }

_ ← [ \t]+

EOL ← _? Comment? ("\r\n" / "\n\r" / "\r" / "\n" / EOF)

Comment ← "//" [^\r\n]*

EOF ← !.

INDENTATION ← spaces:" "* &{ return len(toIfaceSlice(spaces)) == c.state["Indentation"].(int), nil }

INDENT ← #{ c.state["Indentation"] = c.state["Indentation"].(int) + 4; return nil }

DEDENT ← #{ c.state["Indentation"] = c.state["Indentation"].(int) - 4; return nil }

