{
package labeledfailures

func ids(id, list interface{}) (interface{}, error) {
	l := toStringSlice(list)
	l = append([]string{id.(string)}, l...)
	return l, nil
}

func toStringSlice(v interface{}) []string {
	if v == nil {
		return nil
	}
	return v.([]string)
}
}

S ← id:ID list:List {
    return ids(id, list)
} //{errComma} ErrComma //{errId} ErrID
List ← !. / Comma id:ID list:List {
    return ids(id, list)
}
ID ← Sp [a-z]+ {
    return strings.TrimLeft(string(c.text), " \t\r\n"), nil
} / %{errId}
Comma ← Sp ',' / %{errComma}
Sp ← [ \t\r\n]*

ErrComma ← #{
        return errors.New("expecting ','")
    } ( !([a-z]+) .)*
ErrID ← #{
        return errors.New("expecting an identifier")
    } ( !(',') .)* { return "NONE", nil }