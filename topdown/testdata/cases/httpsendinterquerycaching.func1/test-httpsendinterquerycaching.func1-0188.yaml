cases:
- data:
    a:
    - 1
    - 2
    - 3
    - 4
    b:
      v1: hello
      v2: goodbye
    c:
    - x:
      - true
      - false
      - foo
      "y":
      - null
      - 3.14159
      z:
        p: true
        q: false
    d:
      e:
      - bar
      - baz
    f:
    - xs:
      - 1
      ys:
      - 2
    - xs:
      - 2
      ys:
      - 3
    g:
      a:
      - 1
      - 0
      - 0
      - 0
      b:
      - 0
      - 2
      - 0
      - 0
      c:
      - 0
      - 0
      - 0
      - 4
    h:
    - - 1
      - 2
      - 3
    - - 2
      - 3
      - 4
    l:
    - a: bob
      b: -1
      c:
      - 1
      - 2
      - 3
      - 4
    - a: alice
      b: 1
      c:
      - 2
      - 3
      - 4
      - 5
      d: null
    m: []
    numbers:
    - "1"
    - "2"
    - "3"
    - "4"
    strings:
      bar: 2
      baz: 3
      foo: 1
    three: 3
  modules:
  - |
    package generated

    p = x {
      http.send({"cache": true, "force_json_decode": true, "method": "get", "url": "http://127.0.0.1:36035"}, __local0__)
      r1 = __local0__
      http.send({"cache": true, "force_json_decode": true, "method": "get", "url": "http://127.0.0.1:36035"}, __local1__)
      r2 = __local1__
      http.send({"cache": true, "force_json_decode": true, "method": "get", "url": "http://127.0.0.1:36035"}, __local2__)
      r3 = __local2__
      r1 = r2
      r2 = r3
      x = r1.body
    }
  note: httpsendinterquerycaching.func1/http.send GET cache hit (max_age_response_fresh)
  query: data.generated.p = x
  want_result:
  - x:
      x: 1
