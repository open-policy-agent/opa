cases:
- data:
    a:
    - 1
    - 2
    - 3
    - 4
    b:
      v1: hello
      v2: goodbye
    c:
    - x:
      - true
      - false
      - foo
      "y":
      - null
      - 3.14159
      z:
        p: true
        q: false
    d:
      e:
      - bar
      - baz
    f:
    - xs:
      - 1
      ys:
      - 2
    - xs:
      - 2
      ys:
      - 3
    g:
      a:
      - 1
      - 0
      - 0
      - 0
      b:
      - 0
      - 2
      - 0
      - 0
      c:
      - 0
      - 0
      - 0
      - 4
    h:
    - - 1
      - 2
      - 3
    - - 2
      - 3
      - 4
    l:
    - a: bob
      b: -1
      c:
      - 1
      - 2
      - 3
      - 4
    - a: alice
      b: 1
      c:
      - 2
      - 3
      - 4
      - 5
      d: null
    m: []
    numbers:
    - "1"
    - "2"
    - "3"
    - "4"
    strings:
      bar: 2
      baz: 3
      foo: 1
    three: 3
  input_term: '{"req1": {"foo": 4}, "req2": {"bar": 4}}'
  modules:
  - |
    package z

    p {
      data.a[i] = x
      input.req1.foo = x
      input.req2.bar = x
      data.z.q[x]
    }

    q[x] {
      input.req1.foo = x
      input.req2.bar = x
      data.z.r[x]
    }

    r[x] {
      __local1__ = input.req2.bar
      __local2__ = input.req1.foo
      {"bar": [x], "foo": __local1__} = {"bar": [__local2__], "foo": x}
    }

    s {
      input.req3.a.b.x[0] = 1
    }

    t {
      input.req4.a.b.x[0] = 1
    }

    u[x] {
      input.req3.a.b[_] = x
      x > 1
    }

    w = [[1, 2], [3, 4]]

    gt1 {
      __local3__ = input.req1
      __local3__ > 1
    }

    keys[x] = y {
      data.numbers[_] = x
      to_number(x, y)
    }

    loopback = __local0__ {
      true
      __local0__ = input
    }

    sets {
      input.foo[{1}][1] = 1
    }
  - |
    package topdown_test_partial

    __result__ = _result {
      _result = input
    }
  note: inputvalues/simple
  query: data.z.p = x
  want_result:
  - x: true
