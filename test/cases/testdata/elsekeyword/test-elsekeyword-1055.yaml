cases:
- data:
    a:
    - 1
    - 2
    - 3
    - 4
    b:
      v1: hello
      v2: goodbye
    c:
    - x:
      - true
      - false
      - foo
      "y":
      - null
      - 3.14159
      z:
        p: true
        q: false
    d:
      e:
      - bar
      - baz
    f:
    - xs:
      - 1
      ys:
      - 2
    - xs:
      - 2
      ys:
      - 3
    g:
      a:
      - 1
      - 0
      - 0
      - 0
      b:
      - 0
      - 2
      - 0
      - 0
      c:
      - 0
      - 0
      - 0
      - 4
    h:
    - - 1
      - 2
      - 3
    - - 2
      - 3
      - 4
    l:
    - a: bob
      b: -1
      c:
      - 1
      - 2
      - 3
      - 4
    - a: alice
      b: 1
      c:
      - 2
      - 3
      - 4
      - 5
      d: null
    m: []
    numbers:
    - "1"
    - "2"
    - "3"
    - "4"
    strings:
      bar: 2
      baz: 3
      foo: 1
    three: 3
  modules:
  - |
    package ex

    no_op {
      true
    }

    else = false {
      true
    }

    bool {
      false
    }

    else = true {
      true
    }

    non_bool = null {
      false
    }

    else = [100] {
      true
    }

    triple {
      false
    }

    else {
      false
    }

    else = "hello" {
      true
    }

    vars {
      false
    }

    else = ["hello", x] {
      data.b.v2 = x
    }

    refs {
      false
    }

    else = __local6__ {
      true
      __local7__ = data.b.v2
      __local6__ = ["hello", __local7__]
    }

    multiple_defined = false {
      false
    }

    else {
      true
    }

    else = false {
      true
    }

    default default_1 = 1

    default_1 {
      false
    }

    default_1 = 2

    default default_2 = 2

    default_2 {
      false
    }

    default_2 = 1 {
      false
    }

    multiple_roots {
      false
    } else = 1 {
      false
    } else = 2 {
      true
    } else = 3 {
      true
    }

    multiple_roots = 2

    multiple_roots = 3 {
      false
    } else = 2 {
      true
    }

    indexed {
      data.a[0] = 0
    } else = 2 {
      data.a[0] = 1
    } else = 3 {
      data.a[0] = 1
    }

    indexed {
      data.a[0] = 1
      data.a[2] = 2
    } else {
      false
    } else = 2 {
      data.a[0] = x
      x = 1
      data.a[2] = 3
    }

    conflict_1 {
      false
    }

    else = true {
      true
    }

    conflict_1 = false

    conflict_2 {
      false
    }

    else = false {
      true
    }

    conflict_2 {
      false
    }

    else = true {
      true
    }

    fn_result = [x, y, z] {
      data.ex.fn(101, true, x)
      data.ex.fn(100, true, y)
      data.ex.fn(100, false, z)
    }

    fn(__local0__, __local1__) = "large" {
      __local0__ > 100
    } else = "small" {
      __local3__ = true
    } else = "medium" {
      true
    }
  note: elsekeyword/trivial
  query: data.ex.bool = x
  want_result:
  - x: true
