cases:
- data:
    a:
    - 1
  modules:
  - |
    package generated

    p = __local0__ {
      __local2__ = data.a[0]
      net.cidr_contains_matches(["1.1.2.0/24", "1.1.1.0/24"], ["1.1.1.1", __local2__], __local1__)
      __local0__ = __local1__
    }
  note: netcidrcontainsmatches/bad array
  query: data.generated.p = x
  want_error: 'net.cidr_contains_matches: operand 2: element must be string or non-empty
    array'
  want_error_code: eval_builtin_error
  strict_error: true
